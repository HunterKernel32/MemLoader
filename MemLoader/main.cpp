#include <stdio.h>
#include <Windows.h>
#include "MemLoadPe.h"
#include "resource1.h"

using namespace std;


//DWORD __stdcall MemLoad32(PVOID DllFileBuffer)
const UCHAR memload_shellcode[] = {
	0x55,0x8B,0xEC,0x83,0xEC,0x24,0x64,0xA1,0x30,0x00,0x00,0x00,0x33,0xD2,0x53,0x56,0x57,0x8B,0x40,0x0C,0x8B,0x40,0x0C,0x8B,0x00,0x8B,0x00,0x8B,0x70,0x18,0x8B,0x46,0x3C,0x8B,0x44,0x30,0x78,0x03,0xC6,0x8B,0x58,0x20,0x8B,0x78,0x1C,0x03,0xDE,0x8B,0x48,0x24,0x03,0xFE,0x8B,0x40,0x18,0x03,0xCE,0x89,0x45,0xF0,0x85,0xC0,0x8B,0x45,0x08,0x89,0x4D,0xF8,0x8B,0x4D,0x08,0x89,0x5D,0xEC,0x89,0x45,0xF4,0x74,0x69,0x90,0x8B,0x04,0x93,0x8A,0x5C,0x30,0x01,0x03,0xC6,0x80,0xFB,0x6F,0x75,0x29,0x80,0x78,0x04,0x4C,0x75,0x4B,0x80,0x78,0x0A,0x79,0x75,0x45,0x80,0x78,0x0B,0x41,0x75,0x3F,0x80,0x78,0x0C,0x00,0x75,0x39,0x8B,0x45,0xF8,0x0F,0xB7,0x04,0x50,0x8B,0x04,0x87,0x03,0xC6,0x89,0x45,0xF4,0xEB,0x28,0x80,0xFB,0x65,0x75,0x23,0x80,0x78,0x04,0x72,0x75,0x1D,0x38,0x58,0x0B,0x75,0x18,0x80,0x78,0x0C,0x73,0x75,0x12,0x80,0x78,0x0E,0x00,0x75,0x0C,0x8B,0x45,0xF8,0x0F,0xB7,0x04,0x50,0x8B,0x0C,0x87,0x03,0xCE,0x8B,0x5D,0xEC,0x42,0x3B,0x55,0xF0,0x72,0x98,0x8D,0x45,0xDC,0xC7,0x45,0xDC,0x56,0x69,0x72,0x74,0x50,0x64,0xA1,0x30,0x00,0x00,0x00,0xC7,0x45,0xE0,0x75,0x61,0x6C,0x41,0xC7,0x45,0xE4,0x6C,0x6C,0x6F,0x63,0xC6,0x45,0xE8,0x00,0x8B,0x40,0x0C,0x89,0x4D,0xFC,0x8B,0x40,0x0C,0x8B,0x00,0x8B,0x00,0xFF,0x70,0x18,0xFF,0xD1,0x8B,0x75,0x08,0x6A,0x40,0x68,0x00,0x30,0x00,0x00,0x8B,0x5E,0x3C,0x03,0xDE,0x89,0x5D,0xF0,0x0F,0xB7,0x4B,0x14,0xFF,0x73,0x50,0x03,0xCB,0x6A,0x00,0x89,0x4D,0xF8,0xFF,0xD0,0x8B,0x53,0x54,0x8B,0xF8,0x85,0xD2,0x74,0x16,0x8B,0xCF,0x2B,0xF7,0x0F,0x1F,0x40,0x00,0x8A,0x04,0x0E,0x8D,0x49,0x01,0x88,0x41,0xFF,0x83,0xEA,0x01,0x75,0xF2,0x8B,0x45,0xF0,0x33,0xC9,0x33,0xDB,0x66,0x3B,0x48,0x06,0x73,0x46,0x8B,0x4D,0xF8,0x66,0x90,0x0F,0xB7,0xC3,0x8D,0x34,0x80,0x8B,0x54,0xF1,0x28,0x85,0xD2,0x74,0x29,0x8B,0x44,0xF1,0x24,0x85,0xC0,0x74,0x21,0x8B,0x74,0xF1,0x2C,0x8D,0x0C,0x38,0x03,0x75,0x08,0x85,0xD2,0x74,0x10,0x2B,0xF1,0x8A,0x04,0x0E,0x8D,0x49,0x01,0x88,0x41,0xFF,0x83,0xEA,0x01,0x75,0xF2,0x8B,0x4D,0xF8,0x8B,0x45,0xF0,0x43,0x66,0x3B,0x58,0x06,0x72,0xBF,0x85,0xFF,0x0F,0x84,0x21,0x01,0x00,0x00,0x8B,0x57,0x3C,0x8B,0x8C,0x3A,0x80,0x00,0x00,0x00,0x03,0xCF,0x89,0x4D,0xF0,0x8B,0x41,0x0C,0x85,0xC0,0x74,0x69,0x90,0x8B,0x71,0x10,0x03,0xC7,0x8B,0x09,0x03,0xF7,0x03,0xCF,0x50,0x89,0x4D,0x08,0xFF,0x55,0xF4,0x8B,0xD8,0x85,0xDB,0x0F,0x84,0xEE,0x00,0x00,0x00,0x83,0x3E,0x00,0x74,0x34,0x8B,0x45,0x08,0x2B,0xC6,0x89,0x45,0x08,0x0F,0x1F,0x80,0x00,0x00,0x00,0x00,0x8B,0x04,0x30,0x85,0xC0,0x79,0x07,0x25,0xFF,0xFF,0xFF,0x7F,0xEB,0x05,0x83,0xC0,0x02,0x03,0xC7,0x50,0x53,0xFF,0x55,0xFC,0x89,0x06,0x83,0xC6,0x04,0x8B,0x45,0x08,0x83,0x3E,0x00,0x75,0xDB,0x8B,0x4D,0xF0,0x83,0xC1,0x14,0x89,0x4D,0xF0,0x8B,0x41,0x0C,0x85,0xC0,0x75,0x9B,0x8B,0x57,0x3C,0x8D,0x04,0x3A,0x8B,0xDF,0x2B,0x58,0x34,0x89,0x45,0xEC,0x8B,0x80,0xA0,0x00,0x00,0x00,0x85,0xC0,0x0F,0x84,0x89,0x00,0x00,0x00,0x83,0x3C,0x38,0x00,0x8D,0x14,0x38,0x74,0x3B,0xC7,0x45,0x08,0x00,0x10,0x00,0x00,0x8B,0x42,0x04,0xB9,0x00,0x00,0x00,0x00,0x8D,0x70,0xF8,0xD1,0xEE,0x74,0x1E,0x0F,0xB7,0x44,0x4A,0x08,0x66,0x3B,0x45,0x08,0x72,0x0B,0x25,0xFF,0x0F,0x00,0x00,0x03,0xC7,0x03,0x02,0x01,0x18,0x41,0x3B,0xCE,0x7C,0xE5,0x8B,0x42,0x04,0x03,0xD0,0x83,0x3A,0x00,0x75,0xCC,0x8B,0x45,0xEC,0x89,0x78,0x34,0x8B,0x77,0x3C,0x03,0xF7,0x8B,0x46,0x28,0x85,0xC0,0x74,0x09,0x6A,0x00,0x6A,0x01,0x57,0x03,0xC7,0xFF,0xD0,0x0F,0xB7,0x46,0x14,0x8B,0x4C,0x30,0x24,0x85,0xC9,0x74,0x10,0x8B,0xD1,0x33,0xC0,0xC1,0xE9,0x02,0xF3,0xAB,0x8B,0xCA,0x83,0xE1,0x03,0xF3,0xAA,0x5F,0x5E,0xB8,0x01,0x00,0x00,0x00,0x5B,0x8B,0xE5,0x5D,0xC2,0x04,0x00,0x5F,0x5E,0x33,0xC0,0x5B,0x8B,0xE5,0x5D,0xC2,0x04,0x00
};

//DWORD MemLoad64(PVOID DllFileBuffer)
const UCHAR memload_shellcodex64[] = {
	0x48,0x89,0x5C,0x24,0x10,0x48,0x89,0x6C,0x24,0x18,0x48,0x89,0x74,0x24,0x20,0x57,0x41,0x54,0x41,0x55,0x41,0x56,0x41,0x57,0x48,0x83,0xEC,0x30,0x65,0x48,0x8B,0x04,0x25,0x60,0x00,0x00,0x00,0x4C,0x8B,0xF9,0x4C,0x8B,0x64,0x24,0x60,0x48,0x8B,0x6C,0x24,0x60,0x48,0x8B,0x50,0x18,0x48,0x8B,0x42,0x10,0x48,0x8B,0x10,0x48,0x8B,0x02,0x48,0x8B,0x78,0x30,0x48,0x63,0x47,0x3C,0x8B,0x94,0x38,0x88,0x00,0x00,0x00,0x48,0x03,0xD7,0x44,0x8B,0x42,0x20,0x44,0x8B,0x52,0x1C,0x4C,0x03,0xC7,0x8B,0x4A,0x24,0x4C,0x03,0xD7,0x8B,0x42,0x18,0x48,0x03,0xCF,0x85,0xC0,0x74,0x6A,0x44,0x8B,0xC8,0x41,0x8B,0x00,0x48,0x03,0xC7,0x0F,0xB6,0x50,0x01,0x80,0xFA,0x6F,0x75,0x24,0x80,0x78,0x04,0x4C,0x75,0x44,0x80,0x78,0x0A,0x79,0x75,0x3E,0x80,0x78,0x0B,0x41,0x75,0x38,0x80,0x78,0x0C,0x00,0x75,0x32,0x0F,0xB7,0x01,0x45,0x8B,0x24,0x82,0x4C,0x03,0xE7,0xEB,0x26,0x80,0xFA,0x65,0x75,0x21,0x80,0x78,0x04,0x72,0x75,0x1B,0x38,0x50,0x0B,0x75,0x16,0x80,0x78,0x0C,0x73,0x75,0x10,0x80,0x78,0x0E,0x00,0x75,0x0A,0x0F,0xB7,0x01,0x41,0x8B,0x2C,0x82,0x48,0x03,0xEF,0x49,0x83,0xC0,0x04,0x48,0x83,0xC1,0x02,0x49,0x83,0xE9,0x01,0x75,0x99,0xC7,0x44,0x24,0x20,0x56,0x69,0x72,0x74,0x48,0x8D,0x54,0x24,0x20,0xC7,0x44,0x24,0x24,0x75,0x61,0x6C,0x41,0xC7,0x44,0x24,0x28,0x6C,0x6C,0x6F,0x63,0xC6,0x44,0x24,0x2C,0x00,0x65,0x48,0x8B,0x04,0x25,0x60,0x00,0x00,0x00,0x48,0x8B,0x48,0x18,0x48,0x8B,0x41,0x10,0x48,0x8B,0x08,0x48,0x8B,0x09,0x48,0x8B,0x49,0x30,0xFF,0xD5,0x4D,0x63,0x77,0x3C,0x33,0xC9,0x4D,0x03,0xF7,0x41,0xB8,0x00,0x30,0x00,0x00,0x44,0x8D,0x49,0x40,0x41,0x0F,0xB7,0x76,0x14,0x41,0x8B,0x56,0x50,0x49,0x03,0xF6,0xFF,0xD0,0x41,0x8B,0x56,0x54,0x48,0x8B,0xD8,0x48,0x85,0xD2,0x74,0x1D,0x49,0x8B,0xFF,0x48,0x2B,0xF8,0x0F,0x1F,0x80,0x00,0x00,0x00,0x00,0x0F,0xB6,0x0C,0x07,0x88,0x08,0x48,0x8D,0x40,0x01,0x48,0x83,0xEA,0x01,0x75,0xF0,0x45,0x33,0xED,0x45,0x0F,0xB7,0xC5,0x66,0x45,0x3B,0x6E,0x06,0x73,0x4D,0x66,0x90,0x41,0x0F,0xB7,0xC0,0x48,0x8D,0x0C,0x80,0x8B,0x54,0xCE,0x28,0x85,0xD2,0x74,0x30,0x8B,0x44,0xCE,0x24,0x85,0xC0,0x74,0x28,0x8B,0x7C,0xCE,0x2C,0x48,0x8D,0x0C,0x03,0x49,0x03,0xFF,0x48,0x85,0xD2,0x74,0x18,0x48,0x2B,0xF9,0x0F,0x1F,0x44,0x00,0x00,0x0F,0xB6,0x04,0x0F,0x88,0x01,0x48,0x8D,0x49,0x01,0x48,0x83,0xEA,0x01,0x75,0xF0,0x66,0x41,0xFF,0xC0,0x66,0x45,0x3B,0x46,0x06,0x72,0xB5,0x48,0x85,0xDB,0x0F,0x84,0x4C,0x01,0x00,0x00,0x48,0x63,0x4B,0x3C,0x44,0x8B,0xBC,0x19,0x90,0x00,0x00,0x00,0x4C,0x03,0xFB,0x41,0x8B,0x47,0x0C,0x85,0xC0,0x0F,0x84,0x7D,0x00,0x00,0x00,0x49,0xBD,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x0F,0x1F,0x80,0x00,0x00,0x00,0x00,0x41,0x8B,0x7F,0x10,0x41,0x8B,0x37,0x48,0x03,0xFB,0x8B,0xC8,0x48,0x03,0xF3,0x48,0x03,0xCB,0x41,0xFF,0xD4,0x4C,0x8B,0xF0,0x48,0x85,0xC0,0x0F,0x84,0xFF,0x00,0x00,0x00,0x48,0x83,0x3F,0x00,0x74,0x33,0x48,0x2B,0xF7,0x66,0x0F,0x1F,0x44,0x00,0x00,0x48,0x8B,0x0C,0x3E,0x48,0x85,0xC9,0x79,0x08,0x49,0x23,0xCD,0x48,0x8B,0xD1,0xEB,0x07,0x48,0x8D,0x51,0x02,0x48,0x03,0xD3,0x49,0x8B,0xCE,0xFF,0xD5,0x48,0x89,0x07,0x48,0x83,0xC7,0x08,0x48,0x83,0x3F,0x00,0x75,0xD6,0x41,0x8B,0x47,0x20,0x49,0x83,0xC7,0x14,0x85,0xC0,0x75,0x9A,0x8B,0x4B,0x3C,0x45,0x33,0xED,0x4C,0x63,0xD1,0x4C,0x8B,0xCB,0x4D,0x2B,0x4C,0x1A,0x30,0x41,0x8B,0x84,0x1A,0xB0,0x00,0x00,0x00,0x85,0xC0,0x0F,0x84,0x99,0x00,0x00,0x00,0x83,0x3C,0x03,0x00,0x48,0x8D,0x3C,0x03,0x74,0x51,0x41,0xBB,0x00,0x10,0x00,0x00,0x66,0x0F,0x1F,0x84,0x00,0x00,0x00,0x00,0x00,0x8B,0x4F,0x04,0x49,0x8B,0xD5,0x48,0x8D,0x41,0xF8,0x48,0xD1,0xE8,0x4C,0x63,0xC0,0x85,0xC0,0x7E,0x24,0x0F,0xB7,0x44,0x57,0x08,0x66,0x41,0x3B,0xC3,0x72,0x0E,0x8B,0x0F,0x25,0xFF,0x0F,0x00,0x00,0x48,0x03,0xC3,0x4C,0x01,0x0C,0x01,0x48,0xFF,0xC2,0x49,0x3B,0xD0,0x7C,0xDF,0x8B,0x4F,0x04,0x8B,0xC1,0x48,0x03,0xF8,0x83,0x3F,0x00,0x75,0xBE,0x49,0x89,0x5C,0x1A,0x30,0x48,0x63,0x73,0x3C,0x48,0x03,0xF3,0x8B,0x46,0x28,0x85,0xC0,0x74,0x10,0x45,0x33,0xC0,0x48,0x8D,0x3C,0x03,0x48,0x8B,0xCB,0x41,0x8D,0x50,0x01,0xFF,0xD7,0x0F,0xB7,0x4E,0x14,0x8B,0x4C,0x31,0x24,0x48,0x85,0xC9,0x74,0x07,0x48,0x8B,0xFB,0x33,0xC0,0xF3,0xAA,0xB8,0x01,0x00,0x00,0x00,0xEB,0x02,0x33,0xC0,0x48,0x8B,0x5C,0x24,0x68,0x48,0x8B,0x6C,0x24,0x70,0x48,0x8B,0x74,0x24,0x78,0x48,0x83,0xC4,0x30,0x41,0x5F,0x41,0x5E,0x41,0x5D,0x41,0x5C,0x5F,0xC3
};

int main()
{
	MemLoadPe testLoad;
	HRSRC hRsrc = FindResource(NULL, MAKEINTRESOURCE(IDR_EXEDLL2), TEXT("EXEDLL")); //导入资源
	HGLOBAL hGlobal = LoadResource(NULL, hRsrc);
	PVOID lpBuffer = LockResource(hGlobal);
	/*testLoad.MemLoadDll(lpBuffer, NULL);
	printf("LoadBaseAddress = %p\n", testLoad.LoadBaseAddress);
	printf("EntryPointer = %p\n", (PVOID)testLoad.EntryPointer);
	printf("IsDll = %d\n", testLoad.IsDll);
	printf("CheckVMWare8 = %p\n", testLoad.GetExportFuncAddress("CheckVMWare8"));
	FreeResource(hGlobal);
	system("pause");
	printf("is runing!\n");*/

    PVOID mem = VirtualAlloc(NULL, 0x1000, MEM_COMMIT | MEM_RESERVE, PAGE_EXECUTE_READWRITE);

    memcpy(mem, memload_shellcode, sizeof(memload_shellcode));

    ((PTHREAD_START_ROUTINE)mem)(lpBuffer);
    
    //printf("%p\n", mem);

	MessageBoxA(0, "end", "1", 0);
	return 0;
}


