#include <stdio.h>
#include <Windows.h>
#include "MemLoadPe.h"
#include "resource1.h"

using namespace std;


//void __stdcall MemLoad32(PVOID DllFileBuffer)
const UCHAR memload_shellcode[] = {
    0x55,0x8B,0xEC,0x83,0xEC,0x40,0x53,0x56,0x57,0xE8,0xBF,0x00,0x00,0x00,0x89,0x45,0xFC,0x50,0xE8,0xCA,0x00,0x00,0x00,0x89,0x45,0xF8,0x8B,0x4D,0xFC,0x51,0xE8,0x55,0x01,0x00,0x00,0x89,0x45,0xF4,0x6A,0x6C,0x68,0x6C,0x2E,0x64,0x6C,0x68,0x6E,0x74,0x64,0x6C,0x8B,0xCC,0x51,0xFF,0x55,0xF8,0x59,0x59,0x59,0x68,0x70,0x79,0x00,0x00,0x68,0x6D,0x65,0x6D,0x63,0x8B,0xCC,0x51,0x50,0xFF,0x55,0xF4,0x59,0x59,0x89,0x45,0xF0,0x68,0x00,0x00,0x00,0x00,0x68,0x6C,0x6C,0x6F,0x63,0x68,0x75,0x61,0x6C,0x41,0x68,0x56,0x69,0x72,0x74,0x8B,0xC4,0x8B,0x4D,0xFC,0x50,0x51,0xFF,0x55,0xF4,0x59,0x59,0x59,0x59,0x89,0x45,0xEC,0x8B,0x4D,0xF0,0x51,0x8B,0x4D,0xEC,0x51,0x8B,0x4D,0x08,0x51,0xE8,0x88,0x01,0x00,0x00,0x89,0x45,0xE8,0x8B,0x4D,0xF4,0x51,0x8B,0x4D,0xF8,0x51,0x50,0xE8,0x79,0x02,0x00,0x00,0x8B,0x4D,0xE8,0x51,0xE8,0x14,0x03,0x00,0x00,0x8B,0x45,0xE8,0x8B,0x48,0x3C,0x01,0xC8,0x8B,0x48,0x28,0x85,0xC9,0x74,0x11,0x0F,0x1F,0x40,0x00,0x03,0x4D,0xE8,0x8B,0x45,0xE8,0x6A,0x00,0x6A,0x01,0x50,0xFF,0xD1,0x5F,0x5E,0x5B,0x83,0xC4,0x40,0x8B,0xE5,0x5D,0xC2,0x04,0x00,0x64,0xA1,0x30,0x00,0x00,0x00,0x8B,0x40,0x0C,0x8B,0x40,0x0C,0x8B,0x00,0x8B,0x00,0x8B,0x40,0x18,0xC3,0x55,0x8B,0xEC,0x83,0xEC,0x38,0x8B,0x45,0x08,0x89,0x45,0xFC,0x8B,0xC8,0x8B,0x41,0x3C,0x01,0xC1,0x8B,0x41,0x78,0x8B,0x4D,0xFC,0x01,0xC1,0x8B,0x55,0xFC,0x8B,0x41,0x1C,0x01,0xD0,0x89,0x45,0xF8,0x8B,0x41,0x20,0x01,0xD0,0x89,0x45,0xF4,0x8B,0x41,0x24,0x01,0xD0,0x89,0x45,0xF0,0x8B,0x41,0x18,0x89,0x45,0xEC,0x8B,0x75,0xEC,0x31,0xDB,0xF7,0xD3,0x43,0x39,0xF3,0x74,0x44,0x0F,0x1F,0x40,0x00,0x8B,0x45,0xF4,0x8B,0x04,0x98,0x8B,0x4D,0xFC,0x01,0xC1,0x80,0x79,0x01,0x6F,0x75,0xE6,0x80,0x79,0x04,0x4C,0x75,0xE0,0x80,0x79,0x0A,0x79,0x75,0xDA,0x80,0x79,0x0B,0x41,0x75,0xD4,0x80,0x79,0x0C,0x00,0x75,0xCE,0x8B,0x45,0xF0,0x0F,0xB7,0x04,0x58,0x8B,0x4D,0xF8,0x8B,0x0C,0x81,0x03,0x4D,0xFC,0x8B,0xC1,0xEB,0x05,0x0F,0x1F,0x00,0x31,0xC0,0x83,0xC4,0x38,0x8B,0xE5,0x5D,0xC2,0x04,0x00,0x55,0x8B,0xEC,0x83,0xEC,0x38,0x8B,0x45,0x08,0x89,0x45,0xFC,0x8B,0xC8,0x8B,0x41,0x3C,0x01,0xC1,0x8B,0x41,0x78,0x8B,0x4D,0xFC,0x01,0xC1,0x8B,0x55,0xFC,0x8B,0x41,0x1C,0x01,0xD0,0x89,0x45,0xF8,0x8B,0x41,0x20,0x01,0xD0,0x89,0x45,0xF4,0x8B,0x41,0x24,0x01,0xD0,0x89,0x45,0xF0,0x8B,0x41,0x18,0x89,0x45,0xEC,0x8B,0x75,0xEC,0x31,0xDB,0xF7,0xD3,0x43,0x39,0xF3,0x74,0x44,0x0F,0x1F,0x40,0x00,0x8B,0x45,0xF4,0x8B,0x04,0x98,0x8B,0x4D,0xFC,0x01,0xC1,0x80,0x79,0x01,0x65,0x75,0xE6,0x80,0x79,0x04,0x72,0x75,0xE0,0x80,0x79,0x0B,0x65,0x75,0xDA,0x80,0x79,0x0C,0x73,0x75,0xD4,0x80,0x79,0x0E,0x00,0x75,0xCE,0x8B,0x45,0xF0,0x0F,0xB7,0x04,0x58,0x8B,0x4D,0xF8,0x8B,0x0C,0x81,0x03,0x4D,0xFC,0x8B,0xC1,0xEB,0x05,0x0F,0x1F,0x00,0x31,0xC0,0x83,0xC4,0x38,0x8B,0xE5,0x5D,0xC2,0x04,0x00,0x55,0x8B,0xEC,0x81,0xEC,0x20,0x01,0x00,0x00,0x8B,0x45,0x08,0x89,0x45,0xF8,0x8B,0x45,0xF8,0x8B,0x48,0x3C,0x03,0x4D,0xF8,0x89,0x4D,0xEC,0x8B,0x45,0xEC,0x0F,0xB7,0x48,0x14,0x8B,0x55,0xEC,0x8D,0x44,0x11,0x18,0x89,0x45,0xE0,0x6A,0x40,0x68,0x00,0x30,0x00,0x00,0x8B,0x45,0xEC,0x8B,0x48,0x50,0x51,0x6A,0x00,0xFF,0x55,0x0C,0x89,0x45,0xD4,0x8B,0x45,0xEC,0x8B,0x48,0x54,0x51,0x8B,0x55,0xF8,0x52,0x8B,0x45,0xD4,0x50,0xFF,0x55,0x10,0x83,0xC4,0x0C,0x31,0xC0,0x66,0x89,0x45,0xA4,0xEB,0x0F,0x0F,0x1F,0x00,0x66,0x8B,0x45,0xA4,0x66,0x05,0x01,0x00,0x66,0x89,0x45,0xA4,0x0F,0xB7,0x45,0xA4,0x8B,0x4D,0xEC,0x0F,0xB7,0x51,0x06,0x39,0xD0,0x7D,0x76,0x0F,0x1F,0x40,0x00,0x0F,0xB7,0x45,0xA4,0x6B,0xC8,0x28,0x8B,0x55,0xE0,0x83,0x7C,0x11,0x10,0x00,0x74,0xD0,0x0F,0xB7,0x45,0xA4,0x6B,0xC8,0x28,0x8B,0x55,0xE0,0x83,0x7C,0x11,0x0C,0x00,0x74,0xBF,0x0F,0xB7,0x45,0xA4,0x6B,0xC8,0x28,0x8B,0x55,0xE0,0x8B,0x45,0xF8,0x03,0x44,0x11,0x14,0x89,0x45,0xC8,0x0F,0xB7,0x45,0xA4,0x6B,0xC8,0x28,0x8B,0x55,0xE0,0x8B,0x44,0x11,0x10,0x89,0x45,0xBC,0x0F,0xB7,0x45,0xA4,0x6B,0xC8,0x28,0x8B,0x55,0xE0,0x8B,0x45,0xD4,0x03,0x44,0x11,0x0C,0x89,0x45,0xB0,0x8B,0x45,0xBC,0x50,0x8B,0x4D,0xC8,0x51,0x8B,0x55,0xB0,0x52,0xFF,0x55,0x10,0x83,0xC4,0x0C,0xE9,0x6F,0xFF,0xFF,0xFF,0x8B,0x45,0xD4,0x81,0xC4,0x20,0x01,0x00,0x00,0x8B,0xE5,0x5D,0xC2,0x0C,0x00,0x55,0x8B,0xEC,0x83,0xEC,0x38,0x56,0x57,0x8B,0x5D,0x08,0x89,0x5D,0xF4,0x8B,0x4B,0x3C,0x8B,0x94,0x19,0x80,0x00,0x00,0x00,0x8B,0x4C,0x1A,0x0C,0x01,0xDA,0x89,0x55,0xF8,0x85,0xC9,0x74,0x74,0x0F,0x1F,0x40,0x00,0x8B,0x45,0x0C,0x89,0x45,0xF0,0x8B,0x45,0x10,0x89,0x45,0xFC,0x8B,0x72,0x10,0x8D,0x04,0x19,0x8B,0x3A,0x01,0xDE,0x50,0x01,0xDF,0xFF,0x55,0xF0,0x8B,0xD8,0x85,0xDB,0x74,0x4E,0x0F,0x1F,0x40,0x00,0x83,0x3E,0x00,0x74,0x32,0x0F,0x1F,0x40,0x00,0x29,0xF7,0x8B,0x04,0x3E,0x85,0xC0,0x79,0x0E,0x0F,0x1F,0x40,0x00,0x25,0xFF,0xFF,0xFF,0x7F,0xEB,0x0B,0x0F,0x1F,0x00,0x8B,0x4D,0xF4,0x83,0xC1,0x02,0x01,0xC8,0x50,0x53,0xFF,0x55,0xFC,0x89,0x06,0x83,0xC6,0x04,0x83,0x3E,0x00,0x75,0xD4,0x8B,0x55,0xF8,0x8B,0x5D,0xF4,0x83,0xC2,0x14,0x89,0x55,0xF8,0x8B,0x4A,0x0C,0x85,0xC9,0x75,0x9C,0x5F,0x5E,0x83,0xC4,0x38,0x8B,0xE5,0x5D,0xC2,0x0C,0x00,0x55,0x8B,0xEC,0x83,0xEC,0x38,0x53,0x57,0x56,0x8B,0x7D,0x08,0x8B,0xDF,0x8B,0x47,0x3C,0x01,0xF8,0x89,0x45,0xF8,0x8B,0x90,0xA0,0x00,0x00,0x00,0x2B,0x58,0x34,0x01,0xFA,0x83,0x3A,0x00,0x74,0x49,0x0F,0x1F,0x40,0x00,0xC7,0x45,0xFC,0x00,0x10,0x00,0x00,0x8B,0x42,0x04,0xB9,0x00,0x00,0x00,0x00,0x8D,0x70,0xF8,0xD1,0xEE,0x74,0x25,0x0F,0x1F,0x40,0x00,0x0F,0xB7,0x44,0x4A,0x08,0x66,0x3B,0x45,0xFC,0x72,0x0E,0x0F,0x1F,0x40,0x00,0x25,0xFF,0x0F,0x00,0x00,0x03,0x02,0x01,0x1C,0x38,0x41,0x39,0xF1,0x7C,0xE2,0x8B,0x42,0x04,0x01,0xC2,0x83,0x3A,0x00,0x75,0xC5,0x8B,0x45,0xF8,0x89,0x78,0x34,0x5E,0x5F,0x5B,0x83,0xC4,0x38,0x8B,0xE5,0x5D,0xC2,0x04,0x00
};

//void MemLoad64(PVOID DllFileBuffer)
const UCHAR memload_shellcodex64[] = {
    0x48,0x89,0x5C,0x24,0x18,0x55,0x56,0x57,0x41,0x54,0x41,0x55,0x41,0x56,0x41,0x57,0x48,0x8B,0xEC,0x48,0x83,0xEC,0x50,0x33,0xC0,0x4C,0x8B,0xE9,0x48,0x89,0x45,0xF0,0x48,0x89,0x45,0xF8,0x65,0x48,0x8B,0x04,0x25,0x60,0x00,0x00,0x00,0x48,0x8B,0x50,0x18,0x48,0x8B,0x42,0x10,0x48,0x8B,0x10,0x48,0x8B,0x02,0x4C,0x8B,0x48,0x30,0x49,0x63,0x41,0x3C,0x42,0x8B,0x94,0x08,0x88,0x00,0x00,0x00,0x49,0x03,0xD1,0x44,0x8B,0x52,0x20,0x44,0x8B,0x5A,0x1C,0x4D,0x03,0xD1,0x44,0x8B,0x42,0x24,0x4D,0x03,0xD9,0x8B,0x42,0x18,0x4D,0x03,0xC1,0x85,0xC0,0x74,0x77,0x8B,0xD0,0x0F,0x1F,0x40,0x00,0x41,0x8B,0x02,0x49,0x03,0xC1,0x0F,0xB6,0x48,0x01,0x80,0xF9,0x6F,0x75,0x29,0x80,0x78,0x04,0x4C,0x75,0x4E,0x80,0x78,0x0A,0x79,0x75,0x48,0x80,0x78,0x0B,0x41,0x75,0x42,0x80,0x78,0x0C,0x00,0x75,0x3C,0x41,0x0F,0xB7,0x00,0x41,0x8B,0x0C,0x83,0x49,0x03,0xC9,0x48,0x89,0x4D,0xF0,0xEB,0x2B,0x80,0xF9,0x65,0x75,0x26,0x80,0x78,0x04,0x72,0x75,0x20,0x38,0x48,0x0B,0x75,0x1B,0x80,0x78,0x0C,0x73,0x75,0x15,0x80,0x78,0x0E,0x00,0x75,0x0F,0x41,0x0F,0xB7,0x00,0x41,0x8B,0x0C,0x83,0x49,0x03,0xC9,0x48,0x89,0x4D,0xF8,0x49,0x83,0xC2,0x04,0x49,0x83,0xC0,0x02,0x48,0x83,0xEA,0x01,0x75,0x8F,0x48,0x8B,0x45,0xF0,0x48,0x8D,0x55,0xE0,0x4C,0x8B,0x7D,0xF8,0xC7,0x45,0xD0,0x6E,0x74,0x64,0x6C,0xC7,0x45,0xD4,0x6C,0x2E,0x64,0x6C,0x66,0xC7,0x45,0xD8,0x6C,0x00,0xC7,0x45,0x40,0x6D,0x65,0x6D,0x63,0x66,0xC7,0x45,0x44,0x70,0x79,0xC6,0x45,0x46,0x00,0xC7,0x45,0xE0,0x56,0x69,0x72,0x74,0xC7,0x45,0xE4,0x75,0x61,0x6C,0x41,0xC7,0x45,0xE8,0x6C,0x6C,0x6F,0x63,0xC6,0x45,0xEC,0x00,0x48,0x89,0x45,0x48,0x65,0x48,0x8B,0x04,0x25,0x60,0x00,0x00,0x00,0x48,0x8B,0x5D,0xF8,0x48,0x8B,0x48,0x18,0x48,0x8B,0x41,0x10,0x48,0x8B,0x08,0x48,0x8B,0x01,0x48,0x8B,0x48,0x30,0xFF,0xD3,0x48,0x8D,0x4D,0xD0,0x48,0x8B,0xF8,0xFF,0x55,0xF0,0x48,0x8B,0xC8,0x48,0x8D,0x55,0x40,0xFF,0xD3,0x4D,0x63,0x75,0x3C,0x33,0xC9,0x4D,0x03,0xF5,0x41,0xB8,0x00,0x30,0x00,0x00,0x4C,0x8B,0xE0,0x44,0x8D,0x49,0x40,0x41,0x0F,0xB7,0x76,0x14,0x41,0x8B,0x56,0x50,0x49,0x03,0xF6,0xFF,0xD7,0x45,0x8B,0x46,0x54,0x49,0x8B,0xD5,0x48,0x8B,0xC8,0x48,0x8B,0xF8,0x41,0xFF,0xD4,0x33,0xC0,0x0F,0xB7,0xD8,0x66,0x41,0x3B,0x46,0x06,0x73,0x3F,0x0F,0x1F,0x40,0x00,0x66,0x0F,0x1F,0x84,0x00,0x00,0x00,0x00,0x00,0x0F,0xB7,0xC3,0x48,0x8D,0x0C,0x80,0x8B,0x54,0xCE,0x28,0x85,0xD2,0x74,0x19,0x8B,0x44,0xCE,0x24,0x85,0xC0,0x74,0x11,0x44,0x8B,0xC2,0x8B,0x54,0xCE,0x2C,0x49,0x03,0xD5,0x48,0x8D,0x0C,0x07,0x41,0xFF,0xD4,0x66,0xFF,0xC3,0x66,0x41,0x3B,0x5E,0x06,0x72,0xCE,0x48,0x63,0x47,0x3C,0x44,0x8B,0xAC,0x38,0x90,0x00,0x00,0x00,0x4C,0x03,0xEF,0x41,0x8B,0x45,0x0C,0x85,0xC0,0x74,0x73,0x4C,0x8B,0x65,0x48,0x0F,0x1F,0x00,0x41,0x8B,0x5D,0x10,0x45,0x8B,0x75,0x00,0x48,0x03,0xDF,0x8B,0xC8,0x4C,0x03,0xF7,0x48,0x03,0xCF,0x41,0xFF,0xD4,0x48,0x8B,0xF0,0x48,0x85,0xC0,0x74,0x4E,0x48,0x83,0x3B,0x00,0x74,0x3C,0x4C,0x2B,0xF3,0x49,0xBC,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x49,0x8B,0x0C,0x1E,0x48,0x85,0xC9,0x79,0x08,0x49,0x23,0xCC,0x48,0x8B,0xD1,0xEB,0x07,0x48,0x8D,0x57,0x02,0x48,0x03,0xD1,0x48,0x8B,0xCE,0x41,0xFF,0xD7,0x48,0x89,0x03,0x48,0x83,0xC3,0x08,0x48,0x83,0x3B,0x00,0x75,0xD5,0x4C,0x8B,0x65,0x48,0x41,0x8B,0x45,0x20,0x49,0x83,0xC5,0x14,0x85,0xC0,0x75,0x94,0x4C,0x63,0x5F,0x3C,0x4C,0x8B,0xD7,0x45,0x8B,0x84,0x3B,0xB0,0x00,0x00,0x00,0x4D,0x2B,0x54,0x3B,0x30,0x4C,0x03,0xC7,0x41,0x83,0x38,0x00,0x74,0x4C,0xBB,0x00,0x10,0x00,0x00,0x66,0x90,0x41,0x8B,0x48,0x04,0x33,0xD2,0x48,0x8D,0x41,0xF8,0x48,0xD1,0xE8,0x4C,0x63,0xC8,0x85,0xC0,0x7E,0x26,0x41,0x0F,0xB7,0x44,0x50,0x08,0x66,0x3B,0xC3,0x72,0x0F,0x41,0x8B,0x08,0x25,0xFF,0x0F,0x00,0x00,0x48,0x03,0xC7,0x4C,0x01,0x14,0x01,0x48,0xFF,0xC2,0x49,0x3B,0xD1,0x7C,0xDE,0x41,0x8B,0x48,0x04,0x8B,0xC1,0x4C,0x03,0xC0,0x41,0x83,0x38,0x00,0x75,0xBB,0x49,0x89,0x7C,0x3B,0x30,0x48,0x63,0x47,0x3C,0x8B,0x4C,0x38,0x28,0x85,0xC9,0x74,0x10,0x45,0x33,0xC0,0x48,0x8D,0x04,0x0F,0x48,0x8B,0xCF,0x41,0x8D,0x50,0x01,0xFF,0xD0,0x48,0x8B,0x9C,0x24,0xA0,0x00,0x00,0x00,0x48,0x83,0xC4,0x50,0x41,0x5F,0x41,0x5E,0x41,0x5D,0x41,0x5C,0x5F,0x5E,0x5D,0xC3
};

int main()
{
	system("pause");
	MemLoadPe testLoad;
	HRSRC hRsrc = FindResource(NULL, MAKEINTRESOURCE(IDR_EXEDLL2), TEXT("EXEDLL")); //导入资源
	HGLOBAL hGlobal = LoadResource(NULL, hRsrc);
	PVOID lpBuffer = LockResource(hGlobal);
	/*testLoad.MemLoadDll(lpBuffer, NULL);
	printf("LoadBaseAddress = %p\n", testLoad.LoadBaseAddress);
	printf("EntryPointer = %p\n", (PVOID)testLoad.EntryPointer);
	printf("IsDll = %d\n", testLoad.IsDll);
	printf("CheckVMWare8 = %p\n", testLoad.GetExportFuncAddress("CheckVMWare8"));
	FreeResource(hGlobal);
	system("pause");
	printf("is runing!\n");*/

    PVOID mem = VirtualAlloc(NULL, 0x1000, MEM_COMMIT | MEM_RESERVE, PAGE_EXECUTE_READWRITE);

    memcpy(mem, memload_shellcodex64, sizeof(memload_shellcodex64));

    ((PTHREAD_START_ROUTINE)mem)(lpBuffer);
    
    printf("%p\n", mem);

	system("pause");
	return 0;
}


